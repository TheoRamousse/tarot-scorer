@using System.Linq
@using APIGateway.Model
@inject NavigationManager Navigator


@if (Elements.Count != 0)
{
    <table class="table">
        <thead>
            <tr>
                @foreach (var property in Elements[0])
                {
                    @if (@property.Key != "_ignoreThisPartOfDataOrConsequences")
                    {
                        <th>
                            @property.Key
                        </th>
                        }
                    }
                    @if (IsEditable || IsViewable || IsDeletable)
                    {
                        <th></th>
                    }
                </tr>
        </thead>
        <tbody>
            @{
                var count = 0;
            }
            @foreach (var element in Elements)
            {
                var i = 0;
                <tr>
                    @foreach (var property in element.ToArray())
                    {
                        @if (@property.Key != "_ignoreThisPartOfDataOrConsequences")
                        {
                            @if (!(property.Value is Boolean))
                            {
                                <td>
                                    @property.Value
                                </td>
                            }
                            else
                            {
                                <td>
                                    <input type="checkbox" checked="@property.Value" disabled="true"/>
                                </td>
                            }
                         }

                     }
                    @if (IsEditable || IsViewable || IsDeletable)
                    {
                        <td>
                            <div style="float:right;">
                                @if (IsViewable)
                                {
                                    <a href="@(Navigator.BaseUri + OnView + "/" + element.ToArray()[2].Value)">
                                        <button type="button" class="btn btn-info" style="margin-left: 3rem;">
                                            Voir
                                        </button>
                                    </a>
                                }
                                @if (IsEditable)
                                {
                                    <a href="@(Navigator.BaseUri + OnEdit + "/" + element.ToArray()[2].Value)">
                                        <button type="button" class="btn btn-warning" style="margin-left: 3rem;">
                                            Editer
                                        </button>
                                    </a>

                                }
                                @if (IsDeletable)
                                {
                                    <button style="margin-left: 3rem;" type="button" class="btn btn-danger">
                                        Supprimer
                                    </button>
                                }
                            </div>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

<nav class="justify-content-center" aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <li class="page-item"><a class="page-link" @onclick="@((ui) => DecrementCurrentPage())">Précédent</a></li>
        @if (CurrentPage == 1)
        {
            for (int i = 1; i <= 3 || i <= CurrentPage; i++)
            {
                var tempint = i;
                if (i == CurrentPage)
                {
                    <li class="page-item"><a class="page-link font-weight-bold" @onclick="@((ui) => ChangeCurrentPage(@tempint))">@i</a></li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" @onclick="@((ui) => ChangeCurrentPage(@tempint))">@i</a></li>
                }
            }
        }
        else if (CurrentPage == NumberOfPages - 1 || CurrentPage == NumberOfPages)
        {
            for (int i = NumberOfPages - 2; i <= NumberOfPages; i++)
            {
                var tempint = i;
                if (i == CurrentPage)
                {
                    <li class="page-item"><a class="page-link font-weight-bold" @onclick="@((ui) => ChangeCurrentPage(@tempint))">@i</a></li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" @onclick="@((ui) => ChangeCurrentPage(@tempint))">@i</a></li>
                }
            }
        }
        else
        {
            for (int i = CurrentPage - 1; i <= CurrentPage + 1 && i <= NumberOfPages; i++)
            {
                var tempint = i;
                if (i == CurrentPage)
                {
                    <li class="page-item"><a class="page-link font-weight-bold" @onclick="@((ui) => ChangeCurrentPage(@tempint))">@i</a></li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" @onclick="@((ui) => ChangeCurrentPage(@tempint))">@i</a></li>
                }
            }
        }

        <li class="page-item"><a class="page-link" @onclick="@((ui) => IncrementCurrentPage())">Suivant</a></li>
    </ul>
</nav>